#Â Based on https://github.com/bevyengine/bevy_github_ci_template/blob/main/.github/workflows/ci.yaml
name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Remove debug config
        run: rm -f .cargo/config.toml

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.toml') }}

      - name: Install rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev protobuf-compiler libprotobuf-dev libwayland-dev libspeechd-dev clang
      - name: Cargo test
        run: cargo test --workspace

      - name: Cargo check examples
        run: cargo check --workspace --examples

      - name: Cargo check main
        run: cargo check --workspace


  test_release:
    name: Cargo test (release)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Remove debug config
        run: rm -f .cargo/config.toml

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-release-${{ hashFiles('**/Cargo.toml') }}

      - name: Install rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev protobuf-compiler libprotobuf-dev libwayland-dev libspeechd-dev clang
      
      - name: Cargo test
        run: cargo test --workspace --release --no-default-features --features release

      - name: Cargo check examples
        run: cargo check --workspace --examples --release --no-default-features --features release

      - name: Cargo check main
        run: cargo check --workspace --release --no-default-features --features release

  clippy_check:
    name: Cargo clippy and fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Remove debug config
        run: rm -f .cargo/config.toml

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}

      - name: Install rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev protobuf-compiler libprotobuf-dev libwayland-dev libspeechd-dev clang

      - name: Cargo clippy
        run: cargo clippy --workspace --all-targets --all-features -- -Dwarnings

      - name: Cargo fmt
        run: cargo fmt --all -- --check

  check_toml:
    name: Toml check
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install taplo
        run: | 
          curl -fsSL https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-linux-x86_64.gz \
          | gzip -d - \
          | install -m 755 /dev/stdin /usr/local/bin/taplo

      - name: Run Taplo
        id: taplo
        run: taplo fmt --check --diff

      - name: Taplo info
        if: failure()
        run: |
          echo 'To fix toml fmt, please run `taplo fmt`'
          echo 'Or if you use VSCode, use the Even Better Toml extension'
